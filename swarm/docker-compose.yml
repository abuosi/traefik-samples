# sem swarm
#
version: '3'

services:
  traefik:
    image: traefik:v2.0
    command: --providers.docker.endpoint="unix:///var/run/docker.sock" --providers.docker.swarmMode=true --providers.docker.exposedbydefault=false --api.insecure=true
    #command: --providers.docker=true --providers.docker.endpoint="unix:///var/run/docker.sock" --providers.docker.swarmMode=true
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    ports:
      - "80:80"
      - "8080:8080"

  webapp1:
    image: nginx
    command: /bin/bash -c "echo '<h1>Esta é a webapp1</h1>' > /usr/share/nginx/html/index.html && exec nginx -g 'daemon off;'"
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.webapp1.rule=Host(`app1.company.com`)"
        - "traefik.http.services.webapp1.loadbalancer.server.port=80"
    networks:
      - web

  webapp2:
    image: nginx
    command: /bin/bash -c "echo '<h1>Esta é a webapp2</h1>' > /usr/share/nginx/html/index.html && exec nginx -g 'daemon off;'"
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.webapp2.rule=Host(`app2.company.com`)"
        - "traefik.http.services.webapp2.loadbalancer.server.port=80"
    networks:
      - web

networks:
  web:

